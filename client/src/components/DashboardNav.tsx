import { useEffect, useState } from 'react'
import { useLocation, useNavigate } from 'react-router-dom'

import type { Location, NavigateFunction } from 'react-router-dom'

export default function DashboardNav() {
    const location: Location = useLocation()
    const navigate: NavigateFunction = useNavigate()

    const [infoOpen, setInfoOpen] = useState(false)

    const toggleInfo = () => {
        setInfoOpen(prev => !prev)
    }

    return (
        <div id="container" className="">
            <div id="container-menu" className={'fixed top-[-3rem] left-[-4rem] flex h-full pr-35 group'}>
                <div id="container-devide" className="flex flex-col justify-center h-full gap-10">
                    <svg id="logout" className="transition-transform duration-500 group-hover:translate-x-20" onClick={() => navigate('/')} width="52" height="52" viewBox="0 0 52 52" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path
                            d="M26 32.5L32.5 26M32.5 26L26 19.5M32.5 26L8.66666 26M8.66666 36.8333C8.66666 38.8524 8.66666 39.8619 8.99652 40.6583C9.43633 41.7201 10.2804 42.5637 11.3422 43.0035C12.1385 43.3334 13.1476 43.3333 15.1667 43.3333H36.4C38.8269 43.3333 40.0399 43.3333 40.9669 42.861C41.7822 42.4455 42.446 41.7828 42.8615 40.9674C43.3338 40.0404 43.3333 38.8268 43.3333 36.3999V15.5999C43.3333 13.173 43.3338 11.9597 42.8615 11.0327C42.446 10.2174 41.7822 9.55441 40.9669 9.13896C40.0399 8.66666 38.8269 8.66666 36.4 8.66666H15.1667C13.1476 8.66666 12.1385 8.66666 11.3422 8.99651C10.2804 9.43632 9.43633 10.2799 8.99652 11.3417C8.66666 12.138 8.66666 13.1475 8.66666 15.1666"
                            stroke={location.pathname === '/' ? '#EDC79B' : 'white'}
                            strokeWidth="3"
                            strokeLinecap="round"
                            strokeLinejoin="round"
                        />
                    </svg>

                    <svg
                        id="code"
                        className={`transition-transform duration-500 ${location.pathname === '/edit/dashboard' ? 'translate-x-20' : 'translate-x-0 group-hover:translate-x-20'}`}
                        onClick={() => navigate('/edit/dashboard')}
                        width="52"
                        height="52"
                        viewBox="0 0 52 52"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                    >
                        <path
                            d="M32.5 15.1667L43.3333 26L32.5 36.8334M19.5 36.8334L8.66667 26L19.5 15.1667"
                            stroke={location.pathname === '/edit/dashboard' ? '#EDC79B' : 'white'}
                            strokeWidth="3"
                            strokeLinecap="round"
                            strokeLinejoin="round"
                        />
                    </svg>

                    <svg
                        id="settings"
                        className={`transition-transform duration-500 ${location.pathname === '/edit/settings' ? 'translate-x-20' : 'translate-x-0 group-hover:translate-x-20'}`}
                        onClick={() => navigate('/edit/settings')}
                        width="52"
                        height="52"
                        viewBox="0 0 52 52"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                    >
                        <circle cx="26" cy="26" r="8.5" stroke={location.pathname === '/edit/settings' ? '#EDC79B' : 'white'} strokeWidth="3" />
                        <path
                            d="M44.0919 19.3333L43.2984 18.8919C43.1752 18.8234 43.1135 18.789 43.054 18.7533C42.4624 18.3989 41.964 17.9083 41.6001 17.3224C41.5635 17.2635 41.5275 17.2026 41.4569 17.0804L41.4566 17.0798C41.3862 16.9579 41.3507 16.8965 41.318 16.8353C40.9915 16.2258 40.8158 15.547 40.8052 14.8557C40.8043 14.7934 40.8054 14.7296 40.8073 14.6154L40.808 14.5737L40.8232 13.6702C40.8482 12.1838 40.8606 11.4407 40.6525 10.7743C40.4684 10.1848 40.1609 9.64134 39.7497 9.18055C39.2857 8.66058 38.6424 8.28987 37.3588 7.55018L37.3521 7.54632L36.2821 6.92978C34.9976 6.18958 34.3552 5.81964 33.6733 5.6785C33.07 5.55363 32.447 5.55862 31.8458 5.69357C31.1681 5.84572 30.5343 6.22523 29.2688 6.98296L29.2591 6.98876L28.4925 7.44779C28.3713 7.52037 28.3099 7.55658 28.2492 7.59035C27.6462 7.92558 26.9721 8.11211 26.2826 8.13425C26.2131 8.13648 26.1424 8.13648 26.0011 8.13648H25.9993C25.8588 8.13648 25.789 8.13648 25.7196 8.13425C25.0286 8.11202 24.3523 7.92465 23.7484 7.58804C23.6898 7.55536 23.6315 7.52038 23.5188 7.45268L23.5056 7.44479L22.7341 6.98162L22.7283 6.97813C21.4553 6.21385 20.8181 5.83134 20.1369 5.6785C19.5333 5.54308 18.9072 5.53853 18.3017 5.66501C17.6173 5.80797 16.9729 6.18189 15.6848 6.92951L14.6282 7.54275C13.3467 8.28649 12.7069 8.6582 12.2446 9.17853C11.8356 9.63886 11.5293 10.1811 11.3463 10.7691C11.1395 11.4336 11.1512 12.1745 11.1761 13.6559L11.1916 14.576C11.1939 14.7153 11.1955 14.7851 11.1945 14.8536C11.1842 15.5464 11.0078 16.2265 10.6804 16.8371C10.648 16.8975 10.6132 16.9579 10.5435 17.0784L10.5435 17.0785C10.4737 17.1993 10.4389 17.2595 10.4027 17.3177C10.0372 17.9067 9.53565 18.3996 8.94023 18.7547C8.88134 18.7898 8.82087 18.8236 8.69891 18.8911L7.91552 19.3253L7.91524 19.3254C6.61203 20.0476 5.96055 20.4087 5.48649 20.923C5.06708 21.3781 4.74951 21.9177 4.5561 22.5056C4.33777 23.1692 4.33946 23.9133 4.34284 25.3996L4.34285 25.4054L4.34562 26.6234L4.34565 26.6366C4.34899 28.108 4.35066 28.8456 4.56912 29.5037C4.76296 30.0876 5.07895 30.6234 5.49601 31.0757C5.96691 31.5864 6.6132 31.946 7.9039 32.664L7.90812 32.6663L8.68452 33.0983L8.69518 33.1042C8.82027 33.1738 8.88476 33.2097 8.94674 33.247C9.53675 33.6023 10.0329 34.0932 10.3953 34.6788C10.4345 34.7421 10.4721 34.8077 10.5472 34.939L10.5473 34.9391C10.6215 35.0688 10.659 35.1336 10.6934 35.1986C11.0112 35.8003 11.1829 36.4683 11.1945 37.1486C11.1958 37.2221 11.1946 37.297 11.1921 37.4464L11.1772 38.3294L11.1771 38.3326C11.152 39.817 11.1395 40.5595 11.3474 41.2254C11.5314 41.815 11.8398 42.3583 12.251 42.8192C12.7158 43.3401 13.3591 43.7114 14.6472 44.4537L15.7169 45.0701C17.0014 45.8103 17.6446 46.1802 18.3266 46.3214C18.9299 46.4462 19.5527 46.4411 20.1538 46.3062C20.8318 46.1539 21.4658 45.7743 22.7323 45.016L22.7405 45.0111L23.5071 44.5521C23.6284 44.4795 23.6894 44.4433 23.7502 44.4095C24.3531 44.0743 25.027 43.8877 25.7165 43.8656C25.786 43.8633 25.8566 43.8633 25.998 43.8633C26.1397 43.8633 26.2114 43.8633 26.2811 43.8656C26.9721 43.8878 27.6474 44.075 28.2513 44.4116C28.3122 44.4455 28.3732 44.4821 28.4946 44.555L29.2661 45.0182L29.2676 45.019C30.5435 45.785 31.1815 46.1681 31.8636 46.3211C32.4671 46.4565 33.0921 46.4613 33.6976 46.3349C34.382 46.1919 35.0268 45.818 36.3149 45.0704L37.3715 44.4571C38.653 43.7134 39.2929 43.3416 39.7552 42.8213C40.1642 42.3609 40.4706 41.8188 40.6536 41.2308C40.8604 40.5662 40.8484 39.8254 40.8235 38.344L40.808 37.4239L40.8072 37.3776C40.8054 37.2682 40.8043 37.2069 40.8052 37.1465C40.8155 36.4537 40.9916 35.7734 41.319 35.1628C41.3514 35.1024 41.3863 35.0419 41.456 34.9214C41.5257 34.8007 41.5612 34.7402 41.5973 34.682C41.9629 34.093 42.4639 33.6004 43.0593 33.2453C43.1163 33.2114 43.1756 33.1785 43.2899 33.1152L43.3016 33.1087L44.085 32.6745C45.3884 31.9523 46.0396 31.5912 46.5137 31.0768C46.9331 30.6217 47.25 30.0822 47.4434 29.4943C47.6621 28.8298 47.6612 28.0847 47.6578 26.5945L47.655 25.3766C47.6517 23.8964 47.6499 23.1561 47.4307 22.4961C47.2369 21.9122 46.9206 21.3763 46.5036 20.924C46.0322 20.4128 45.3854 20.0529 44.0919 19.3333Z"
                            stroke={location.pathname === '/edit/settings' ? '#EDC79B' : 'white'}
                            strokeWidth="3"
                            strokeLinecap="round"
                            strokeLinejoin="round"
                        />
                    </svg>
                </div>

                <svg
                    id="info"
                    className={`absolute bottom-[0] transition-transform duration-500 ${location.pathname !== '/edit/dashboard' ? 'hidden' : ''} ${infoOpen ? 'translate-x-20' : 'translate-x-0 group-hover:translate-x-20'} ${location.pathname != '/edit/dashboard'}`}
                    onClick={() => toggleInfo()}
                    width="52"
                    height="52"
                    viewBox="0 0 52 52"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                >
                    <path
                        d="M26 23.8333V34.6667M26 45.5C15.2304 45.5 6.5 36.7696 6.5 26C6.5 15.2304 15.2304 6.5 26 6.5C36.7696 6.5 45.5 15.2304 45.5 26C45.5 36.7696 36.7696 45.5 26 45.5ZM26.1079 17.3333V17.55L25.8921 17.5499V17.3333H26.1079Z"
                        stroke={infoOpen ? '#EDC79B' : 'white'}
                        strokeWidth="3"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                    />
                </svg>
            </div>
        </div>
    )
}
